{"version":3,"sources":["Pokecard.js","PokeList.js","App.js","reportWebVitals.js","index.js"],"names":["React","Component","PokeList","props","pokemons","pokemon","console","log","name","id","types","evolution","url","App","state","this","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAEuBA,IAAMC,UCiBdC,MAjBf,SAAkBC,GAchB,OAbA,WAAyB,IAAD,gBACFA,EAAMC,UADJ,IACtB,2BAAoC,CAAC,IAA5BC,EAA2B,QAClCC,QAAQC,IAAIF,EAAQG,MAEdH,EAAQI,GACNJ,EAAQG,KACRH,EAAQK,MACHL,EAAQM,UACZN,EAAQO,KARG,iCC2GXC,E,4CAvGb,aAAe,IAAD,6BAoFZ,EAAKC,MAAQ,CACXV,SAAS,GAAD,OApFM,CACd,CACEK,GAAI,EACJD,KAAM,YACNE,MAAO,CAAC,SAAU,SAClBC,UAAW,KACXC,IACE,kFAEJ,CACEH,GAAI,EACJD,KAAM,UACNE,MAAO,CAAC,SAAU,SAClBC,UAAW,YACXC,IACE,kFAEJ,CACEH,GAAI,EACJD,KAAM,WACNE,MAAO,CAAC,SAAU,SAClBC,UAAW,UACXC,IACE,kFAEJ,CACEH,GAAI,EACJD,KAAM,aACNE,MAAO,CAAC,QACRC,UAAW,KACXC,IACE,kFAEJ,CACEH,GAAI,EACJD,KAAM,aACNE,MAAO,CAAC,QACRC,UAAW,aACXC,IACE,kFAEJ,CACEH,GAAI,EACJD,KAAM,YACNE,MAAO,CAAC,SAAU,QAClBC,UAAW,aACXC,IACE,kFAEJ,CACEH,GAAI,EACJD,KAAM,WACNE,MAAO,CAAC,SACRC,UAAW,KACXC,IACE,kFAEJ,CACEH,GAAI,EACJD,KAAM,YACNE,MAAO,CAAC,SACRC,UAAW,WACXC,IACE,kFAEJ,CACEH,GAAI,EACJD,KAAM,YACNE,MAAO,CAAC,SACRC,UAAW,YACXC,IACE,kFAEJ,CACEH,GAAI,GACJD,KAAM,WACNE,MAAO,CAAC,OACRC,UAAW,KACXC,IACE,sFAhFM,e,qDAwFJ,IAAD,gBACaG,KAAKD,MAAMV,UADxB,IACP,2BAAyC,CAAC,IAAjCC,EAAgC,QACvCC,QAAQC,IAAIF,EAAQG,MAEdH,EAAQI,GACNJ,EAAQG,KACRH,EAAQK,MACHL,EAAQM,UACZN,EAAQO,KARZ,8BAWP,OAAO,cAAC,EAAD,CAAUR,SAAUW,KAAKD,MAAMV,e,GApGxBJ,IAAMC,WCMTe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e337d03e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Pokecard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    console.log(this.props.id);\r\n    return <h2>{this.props.name}</h2>;\r\n  }\r\n}\r\n\r\nexport default Pokecard;\r\n","import Pokecard from './Pokecard';\r\n\r\nfunction PokeList(props) {\r\n  function generateList() {\r\n    for (let pokemon of props.pokemons) {\r\n      console.log(pokemon.name);\r\n      <Pokecard\r\n        id={pokemon.id}\r\n        name={pokemon.name}\r\n        type={pokemon.types}\r\n        evolution={pokemon.evolution}\r\n        image={pokemon.url}\r\n      />;\r\n    }\r\n  }\r\n\r\n  return generateList;\r\n}\r\n\r\nexport default PokeList;\r\n","import React from 'react';\nimport './App.css';\n\nimport Pokecard from './Pokecard';\nimport PokeList from './PokeList';\n\nclass App extends React.Component {\n  constructor() {\n    const Pokedex = [\n      {\n        id: 1,\n        name: 'bulbasaur',\n        types: ['poison', 'grass'],\n        evolution: null,\n        url:\n          'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png',\n      },\n      {\n        id: 2,\n        name: 'ivysaur',\n        types: ['poison', 'grass'],\n        evolution: 'bulbasaur',\n        url:\n          'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/2.png',\n      },\n      {\n        id: 3,\n        name: 'venusaur',\n        types: ['poison', 'grass'],\n        evolution: 'ivysaur',\n        url:\n          'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/3.png',\n      },\n      {\n        id: 4,\n        name: 'charmander',\n        types: ['fire'],\n        evolution: null,\n        url:\n          'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/4.png',\n      },\n      {\n        id: 5,\n        name: 'charmeleon',\n        types: ['fire'],\n        evolution: 'charmander',\n        url:\n          'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/5.png',\n      },\n      {\n        id: 6,\n        name: 'charizard',\n        types: ['flying', 'fire'],\n        evolution: 'charmeleon',\n        url:\n          'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/6.png',\n      },\n      {\n        id: 7,\n        name: 'squirtle',\n        types: ['water'],\n        evolution: null,\n        url:\n          'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/7.png',\n      },\n      {\n        id: 8,\n        name: 'wartortle',\n        types: ['water'],\n        evolution: 'squirtle',\n        url:\n          'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/8.png',\n      },\n      {\n        id: 9,\n        name: 'blastoise',\n        types: ['water'],\n        evolution: 'wartortle',\n        url:\n          'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/9.png',\n      },\n      {\n        id: 10,\n        name: 'caterpie',\n        types: ['bug'],\n        evolution: null,\n        url:\n          'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png',\n      },\n    ];\n\n    this.state = {\n      pokemons: [...Pokedex],\n    };\n  }\n  render() {\n    for (let pokemon of this.state.pokemons) {\n      console.log(pokemon.name);\n      <Pokecard\n        id={pokemon.id}\n        name={pokemon.name}\n        type={pokemon.types}\n        evolution={pokemon.evolution}\n        image={pokemon.url}\n      />;\n    }\n    return <PokeList pokemons={this.state.pokemons} />;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}